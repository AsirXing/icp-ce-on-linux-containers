Last login: Fri Dec 14 21:58:24 on ttys003
harimohanbawa:~ harimohanbawa$ cd Documents/MCM/
harimohanbawa:MCM harimohanbawa$ cd ibm-cld-vm/
harimohanbawa:ibm-cld-vm harimohanbawa$ ./ibm-cld-lxd-instance.sh 
169.61.57.200 --> root / C5UQyD38
root@169.61.57.200's password: 
Welcome to Ubuntu 18.04.1 LTS (GNU/Linux 4.15.0-39-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sat Dec 15 06:11:50 UTC 2018

  System load:     1.49               IP address for eth0:    10.73.56.111
  Usage of /:      43.1% of 24.24GB   IP address for eth1:    169.61.57.200
  Memory usage:    47%                IP address for docker0: 172.17.0.1
  Swap usage:      0%                 IP address for lxdbr0:  10.20.20.1
  Processes:       758                IP address for devbr0:  10.50.50.1
  Users logged in: 0

 * MicroK8s is Kubernetes in a snap. Made by devs for devs.
   One quick install on a workstation, VM, or appliance.

   - https://bit.ly/microk8s

 * Full K8s GPU support is now available! Get it in MicroK8s, CDK,
   and on GKE with Ubuntu workers.

   - https://blog.ubuntu.com/2018/12/10/using-gpgpus-with-kubernetes


  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

 * Canonical Livepatch is available for installation.
   - Reduce system reboots and improve kernel security. Activate at:
     https://ubuntu.com/livepatch

14 packages can be updated.
0 updates are security updates.


*** System restart required ***
Last login: Tue Dec 11 21:37:31 2018 from 12.166.46.45
root@caseicpbox:~# cat /etc/haproxy/haproxy.cfg 
global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

######################################################################
###  Particular care must be taken against port ranges, because
###  every <address:port> couple consumes one socket (= a file
###  descriptor), so it's easy to consume lots of descriptors
###  with a simple range, and to run out of sockets
######################################################################

frontend icp_master
    bind *:8443
    bind *:8001
    bind *:8500
    bind *:8600
    bind *:9443
    
    # bind [<address>]:<port_range> [, ...]
    # bind *:25000-25100, 30000,30010 
    mode tcp
    #default_backend icp_master_server
    use_backend icp_master_server

backend icp_master_server
    balance roundrobin
    mode tcp
    server dev-master-0 10.50.50.101


frontend icp_proxy
    #bind *:8001
    bind *:80
    bind *:443
    bind *:30000
    bind *:30000-32767
    # bind [<address>]:<port_range> [, ...]
    # bind *:25000-25100, 30000,30010 
    mode tcp
    use_backend icp_proxy_server

backend icp_proxy_server
    balance roundrobin
    mode tcp
    server dev-proxy-0 10.50.50.121


root@caseicpbox:~# vi /etc/haproxy/haproxy.cfg 

        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

######################################################################
###  Particular care must be taken against port ranges, because
###  every <address:port> couple consumes one socket (= a file
###  descriptor), so it's easy to consume lots of descriptors
###  with a simple range, and to run out of sockets
######################################################################

frontend icp_master
    bind *:8443
    bind *:8001
    bind *:8500
    bind *:8600
    bind *:9443

    # bind [<address>]:<port_range> [, ...]
    # bind *:25000-25100, 30000,30010 
    mode tcp
    #default_backend icp_master_server
    use_backend icp_master_server

backend icp_master_server
    balance roundrobin
    mode tcp
    server dev-master-0 10.50.50.101


frontend icp_proxy
    #bind *:8001
    bind *:80
    bind *:443
    bind *:30000
    bind *:30000-32767
    # bind [<address>]:<port_range> [, ...]
    # bind *:25000-25100, 30000,30010 
    mode tcp
    use_backend icp_proxy_server

backend icp_proxy_server
    balance roundrobin
    mode tcp
    server dev-proxy-0 10.50.50.121
